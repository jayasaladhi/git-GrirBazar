import React, { createContext, useState, useEffect } from "react";
import i18next from "i18next";
import { initReactI18next } from "react-i18next";
import AsyncStorage from "@react-native-async-storage/async-storage";

// Initialize i18next
i18next.use(initReactI18next).init({
  resources: {
    english: {
      translation: {
        title: "GIRIBAZAR",
        selectLanguage: "Select Language",
        login: "LOGIN",
        enterMobile: "Enter your 10-digit mobile number",
        sendOtp: "Send OTP",
        continue: "CONTINUE",
        enterValidMobile: "Please enter a valid 10-digit mobile number",
        telugu: "Telugu",
        english: "English",
        hindi: "Hindi",
        vehicleDetailsTitle: "Vehicle Details",
        vehicleIDPlaceholder: "Vehicle ID",
        vehicleNamePlaceholder: "Vehicle Name",
        vehicleCapacityPlaceholder: "Vehicle Capacity",
        driverDetailsTitle: "Driver Details",
        driverNamePlaceholder: "Driver Name",
        driverPhonePlaceholder: "Driver Phone Number",
        driverLicensePlaceholder: "Driver License",
        dailyWagesPlaceholder: "Daily Wages",
        saveDetails: "Save Details",
        updateDetails: "Update Details",
        success: "Success",
        detailsSaved: "Details saved successfully",
        vehicleDriverHistoryTitle: "Vehicle-Driver History",
        searchVehicleIDPlaceholder: "Search by Vehicle ID",
        vehicleID: "Vehicle ID",
        vehicleName: "Vehicle Name",
        vehicleCapacity: "Vehicle Capacity",
        driverName: "Driver Name",
        driverPhone: "Driver Phone",
        driverLicense: "Driver License",
        dailyWages: "Daily Wages",
        edit: "Edit",
        remove: "Remove",
        error: "Error",
        fillAllFields: "Please fill all fields",
        saveError: "Failed to save details",
        fetchError: "Failed to fetch history",
        removeError: "Failed to remove entry",
        noData: "No data available",
        loadError: "Failed to load data",
        categoryAdded: 'Category "{{category}}" added!',
        categoryExistsOrEmpty: 'Category name is empty or already exists.',
        productAdded: 'Product "{{product}}" added to "{{category}}"',
        selectCategoryAndProduct: 'Select a category and enter a product name.',
        addCategoryTitle: 'Add Category',
        enterCategoryPlaceholder: 'Enter Category',
        addCategoryButton: 'Add Category',
        addProductTitle: 'Add Product',
        searchCategoryPlaceholder: 'Search Category',
        enterProductNamePlaceholder: 'Enter Product Name',
        addProductButton: 'Add Product',
        salesReportTitle: 'Sales Report',
        fromLabel: 'From:',
        toLabel: 'To:',
        categoryLabel: 'Category',
        productLabel: 'Product',
        quantityLabel: 'Quantity',
        totalPriceLabel: 'Total Price',
        addPurchasedProductsTitle: 'Add Purchased Products',
        searchCategoryLabel: 'Search Category',
        categoryPlaceholder: 'Start typing category name',
        searchProductLabel: 'Search Product',
        productPlaceholder: 'Start typing product name',
        quantityPlaceholder: 'Enter quantity',
        updateButton: 'Update',
        addButton: 'Add',
        purchaseListTitle: 'Purchase List',
        priceLabel: 'Price',
        editButton: 'Edit',
        deleteButton: 'Delete',
        submitButton: 'Submit',
        missingFields: 'Please select a category and product.',
        submitError: 'Failed to submit data',
        sellProductsTitle: 'Sell Products',
        availableLabel: 'Available:',
        sellButton: 'Sell',
        viewSellHistoryButton: 'View Sell History',
        invalidQuantity: 'Please select a product and enter a valid quantity',
        inventoryNotFound: 'Inventory data not found!',
        insufficientStock: 'Not enough stock!',
        productNotFound: 'Product not found in inventory!',
        lowStockAlert: '⚠️ Low stock alert! {{product}} is below 20% of its original quantity ({{quantity}} kg remaining).',
        saleRecorded: 'Sale recorded successfully!',
        warning: 'Warning',
        sellHistoryTitle: 'Sell History',
        quantitySoldLabel: 'Quantity Sold',
        finalSubmittedListTitle: 'Final Submitted List',
        totalAmountLabel: 'Total Amount',
        profitLossTitle: 'Profit & Loss',
        totalSaleLabel: 'Total Sale',
        totalSalePlaceholder: 'Enter total sale (Rs)',
        loadedStockLabel: 'Loaded Stock Amount',
        loadedStockPlaceholder: 'Enter stock amount (Rs)',
        remainingStockLabel: 'Remaining Stock Amount',
        remainingStockPlaceholder: 'Enter stock amount (Rs)',
        totalExpensesLabel: 'Total Expenses',
        totalExpensesPlaceholder: 'Enter expenses (Rs)',
        todayProfitLossLabel: "Today's Profit/Loss",
        calculateProfitLossButton: 'Calculate Profit/Loss',
        currencySymbol: 'Rs',
        lowStockAlertsTitle: 'Low Stock Alerts',
        defaultLowStockMessage: '{{product}} is too low',
        availableQuantityLabel: 'Available Quantity',
        noAlertsMessage: 'No alerts available',
        viewAllAlertsButton: 'View All Alerts',
        sellerDetailsTitle: 'Seller Details',
        sellerIdLabel: 'Seller ID',
        sellerNameLabel: 'Seller Name',
        phoneNumberLabel: 'Phone Number',
        vehicleIdLabel: 'Vehicle Id',
        driverNameLabel: 'Driver Name',
        saveButton: 'Save',
        submittedDetailsTitle: 'Submitted Details',
        accountDetailsTitle: 'Account Details',
        homeTab: 'Home',
        inventoryTab: 'Inventory',
        sellTab: 'Sell',
        profitLossTab: 'Profitloss',
        notificationsTab: 'Notifications',
        mainTab: 'Main',
        addCategoriesProducts: 'Add Categories & Products',
        addVehicleDetails: 'Add Vehicle Details',
        reports: 'Reports',
        logout: 'Logout',
        inventoryOverviewTitle: 'Inventory Overview',
        pricePerUnitLabel: 'Price (per unit)',
        account:'Account',
        areyousureyouwanttologout:'Are you sure you want to logout?',
        cancel:'Cancel'
      },
    },
    telugu: {
      translation: {
        title: "గిరిబజార్",
        selectLanguage: "భాషను ఎంచుకోండి",
        login: "లాగిన్",
        enterMobile: "మీ 10 అంకెల మొబైల్ నంబర్ నమోదు చేయండి",
        sendOtp: "ఓటీపీ పంపండి",
        continue: "కొనసాగించండి",
        enterValidMobile: "దయచేసి 10 అంకెల మొబైల్ నంబర్ నమోదు చేయండి",
        telugu: "తెలుగు",
        english: "ఇంగ్లీష్",
        hindi: "హిందీ",
        vehicleDetailsTitle: "వాహన వివరాలు",
        vehicleIDPlaceholder: "వాహన ID",
        vehicleNamePlaceholder: "వాహన పేరు",
        vehicleCapacityPlaceholder: "వాహన సామర్థ్యం",
        driverDetailsTitle: "డ్రైవర్ వివరాలు",
        driverNamePlaceholder: "డ్రైవర్ పేరు",
        driverPhonePlaceholder: "డ్రైవర్ ఫోన్ నంబర్",
        driverLicensePlaceholder: "డ్రైవర్ లైసెన్స్",
        dailyWagesPlaceholder: "దిన జీతం",
        saveDetails: "వివరాలు సేవ్ చేయండి",
        updateDetails: "వివరాలను అప్‌డేట్ చేయండి",
        success: "విజయం",
        detailsSaved: "వివరాలు విజయవంతంగా సేవ్ చేయబడ్డాయి",
        vehicleDriverHistoryTitle: "వాహన-డ్రైవర్ చరిత్ర",
        searchVehicleIDPlaceholder: "వాహన ID ద్వారా శోధించండి",
        vehicleID: "వాహన ID",
        vehicleName: "వాహన పేరు",
        vehicleCapacity: "వాహన సామర్థ్యం",
        driverName: "డ్రైవర్ పేరు",
        driverPhone: "డ్రైవర్ ఫోన్",
        driverLicense: "డ్రైవర్ లైసెన్స్",
        dailyWages: "దిన జీతం",
        edit: "మార్చు",
        remove: "తొలగించు",
        error: "దోషం",
        fillAllFields: "దయచేసి అన్ని ఖాళీలను పూరించండి",
        saveError: "వివరాలు సేవ్ చేయడంలో విఫలమైంది",
        fetchError: "చరిత్రను పొందడంలో విఫలమైంది",
        removeError: "ఎంట్రీని తొలగించడంలో విఫలమైంది",
        noData: "డేటా అందుబాటులో లేదు",
        loadError: "డేటాను లోడ్ చేయడంలో విఫలమైంది",
        categoryAdded: 'కేటగిరీ "{{category}}" జోడించబడింది!',
        categoryExistsOrEmpty: 'కేటగిరీ పేరు ఖాళీగా ఉంది లేదా ఇప్పటికే ఉంది.',
        productAdded: 'ప్రొడక్ట్ "{{product}}" "{{category}}" కు జోడించబడింది',
        selectCategoryAndProduct: 'ఒక కేటగిరీని ఎంచుకోండి మరియు ఒక ప్రొడక్ట్ పేరును నమోదు చేయండి.',
        addCategoryTitle: 'కేటగిరీని జోడించండి',
        enterCategoryPlaceholder: 'కేటగిరీని నమోదు చేయండి',
        addCategoryButton: 'కేటగిరీని జోడించండి',
        addProductTitle: 'ప్రొడక్ట్‌ను జోడించండి',
        searchCategoryPlaceholder: 'కేటగిరీని శోధించండి',
        enterProductNamePlaceholder: 'ప్రొడక్ట్ పేరును నమోదు చేయండి',
        addProductButton: 'ప్రొడక్ట్‌ను జోడించండి',
        salesReportTitle: 'సేల్స్ రిపోర్ట్',
        fromLabel: 'తేదీ నుండి:',
        toLabel: 'తేదీ వరకు:',
        categoryLabel: 'కేటగిరీ',
        productLabel: 'ప్రొడక్ట్',
        quantityLabel: 'పరిమాణం',
        totalPriceLabel: 'మొత్తం ధర',
        addPurchasedProductsTitle: 'కొనుగోలు చేసిన ఉత్పత్తులను జోడించండి',
        searchCategoryLabel: 'కేటగిరీని శోధించండి',
        categoryPlaceholder: 'కేటగిరీ పేరును నమోదు చేయండి',
        searchProductLabel: 'ప్రొడక్ట్‌ను శోధించండి',
        productPlaceholder: 'ప్రొడక్ట్ పేరును నమోదు చేయండి',
        quantityPlaceholder: 'పరిమాణాన్ని నమోదు చేయండి',
        updateButton: 'నవీకరించు',
        addButton: 'జోడించు',
        purchaseListTitle: 'కొనుగోలు జాబితా',
        priceLabel: 'ధర',
        editButton: 'మార్చు',
        deleteButton: 'తొలగించు',
        submitButton: 'సమర్పించు',
        missingFields: 'దయచేసి ఒక కేటగిరీ మరియు ప్రొడక్ట్‌ను ఎంచుకోండి.',
        submitError: 'డేటాను సమర్పించడంలో విఫలమైంది',
        sellProductsTitle: 'ఉత్పత్తులను అమ్మండి',
        availableLabel: 'అందుబాటులో:',
        sellButton: 'అమ్ము',
        viewSellHistoryButton: 'అమ్మకాల చరిత్రను వీక్షించండి',
        invalidQuantity: 'దయచేసి ఒక ప్రొడక్ట్‌ను ఎంచుకోండి మరియు సరైన పరిమాణాన్ని నమోదు చేయండి',
        inventoryNotFound: 'ఇన్వెంటరీ డేటా కనుగొనబడలేదు!',
        insufficientStock: 'పరిమాణం సరిపోవడం లేదు!',
        productNotFound: 'ఇన్వెంటరీలో ప్రొడక్ట్ కనుగొనబడలేదు!',
        lowStockAlert: '⚠️ కనిష్ట స్టాక్ హెచ్చరిక! {{product}} దాని అసలు పరిమాణం 20% కంటే తక్కువగా ఉంది ({{quantity}} kg మిగిలినవి).',
        saleRecorded: 'అమ్మకం విజయవంతంగా నమోదు చేయబడింది!',
        warning: 'హెచ్చరిక',
        sellHistoryTitle: 'అమ్మకాల చరిత్ర',
        quantitySoldLabel: 'అమ్మిన పరిమాణం',
        finalSubmittedListTitle: 'చివరి సమర్పించిన జాబితా',
        totalAmountLabel: 'మొత్తం మొత్తం',
        profitLossTitle: 'లాభం & నష్టం',
        totalSaleLabel: 'మొత్తం అమ్మకాలు',
        totalSalePlaceholder: 'మొత్తం అమ్మకాలను నమోదు చేయండి (రూ)',
        loadedStockLabel: 'లోడ్ చేసిన స్టాక్ మొత్తం',
        loadedStockPlaceholder: 'స్టాక్ మొత్తాన్ని నమోదు చేయండి (రూ)',
        remainingStockLabel: 'మిగిలిన స్టాక్ మొత్తం',
        remainingStockPlaceholder: 'స్టాక్ మొత్తాన్ని నమోదు చేయండి (రూ)',
        totalExpensesLabel: 'మొత్తం ఖర్చులు',
        totalExpensesPlaceholder: 'ఖర్చులను నమోదు చేయండి (రూ)',
        todayProfitLossLabel: "ఈ రోజు లాభం/నష్టం",
        calculateProfitLossButton: 'లాభం/నష్టాన్ని లెక్కించండి',
        currencySymbol: 'రూ',
        lowStockAlertsTitle: 'కనిష్ట స్టాక్ హెచ్చరికలు',
        defaultLowStockMessage: '{{product}} చాలా తక్కువగా ఉంది',
        availableQuantityLabel: 'అందుబాటులో ఉన్న పరిమాణం',
        noAlertsMessage: 'హెచ్చరికలు అందుబాటులో లేవు',
        viewAllAlertsButton: 'అన్ని హెచ్చరికలను వీక్షించండి',
        sellerDetailsTitle: 'విక్రేత వివరాలు',
        sellerIdLabel: 'విక్రేత ID',
        sellerNameLabel: 'విక్రేత పేరు',
        phoneNumberLabel: 'ఫోన్ నంబర్',
        vehicleIdLabel: 'వాహన ID',
        driverNameLabel: 'డ్రైవర్ పేరు',
        saveButton: 'సేవ్ చేయండి',
        submittedDetailsTitle: 'సమర్పించిన వివరాలు',
        accountDetailsTitle: 'ఖాతా వివరాలు',
        homeTab: 'హోమ్',
        inventoryTab: 'స్టాక్',
        sellTab: 'అమ్మకం',
        profitLossTab: 'లాభం/నష్టం',
        notificationsTab: 'నోటిఫికేషన్స్',
        mainTab: 'ప్రధాన',
        addCategoriesProducts: 'కేటగిరీలు & ఉత్పత్తులను జోడించండి',
        addVehicleDetails: 'వాహన వివరాలను జోడించండి',
        reports: 'రిపోర్ట్‌లు',
        logout: 'లాగ్ అవుట్',
        inventoryOverviewTitle: 'స్టాక్ ఎగ్జిబిషన్',
        pricePerUnitLabel: 'ఏకైక ధర',
        account:'ఖాతా',
        areyousureyouwanttologout:'మీరు ఖచ్చితంగా లాగ్‌అవుట్ చేయాలనుకుంటున్నారా?',
        cancel:'రద్దు చేయి'
      },
    },
    hindi: {
      translation: {
        title: "गिरिबाज़ार",
        selectLanguage: "भाषा चुनें",
        login: "लॉगिन",
        enterMobile: "अपना 10 अंकों का मोबाइल नंबर दर्ज करें",
        sendOtp: "ओटीपी भेजें",
        continue: "जारी रखें",
        enterValidMobile: "कृपया 10 अंकों का मान्य मोबाइल नंबर दर्ज करें",
        telugu: "तेलुगु",
        english: "अंग्रेजी",
        hindi: "हिंदी",
        vehicleDetailsTitle: "वाहन विवरण",
        vehicleIDPlaceholder: "वाहन ID",
        vehicleNamePlaceholder: "वाहन का नाम",
        vehicleCapacityPlaceholder: "वाहन क्षमता",
        driverDetailsTitle: "ड्राइवर विवरण",
        driverNamePlaceholder: "ड्राइवर का नाम",
        driverPhonePlaceholder: "ड्राइवर का फोन नंबर",
        driverLicensePlaceholder: "ड्राइवर का लाइसेंस",
        dailyWagesPlaceholder: "दैनिक वेतन",
        saveDetails: "विवरण सहेजें",
        updateDetails: "विवरण अपडेट करें",
        success: "सफलता",
        detailsSaved: "विवरण सफलतापूर्वक सहेजा गया",
        vehicleDriverHistoryTitle: "वाहन-ड्राइवर इतिहास",
        searchVehicleIDPlaceholder: "वाहन ID से खोजें",
        vehicleID: "वाहन ID",
        vehicleName: "वाहन का नाम",
        vehicleCapacity: "वाहन क्षमता",
        driverName: "ड्राइवर का नाम",
        driverPhone: "ड्राइवर का फोन",
        driverLicense: "ड्राइवर का लाइसेंस",
        dailyWages: "दैनिक वेतन",
        edit: "संपादन",
        remove: "हटाएं",
        error: "त्रुटि",
        fillAllFields: "कृपया सभी क्षेत्रों को भरें",
        saveError: "विवरण सहेजने में विफल",
        fetchError: "इतिहास प्राप्त करने में विफल",
        removeError: "प्रवेश हटाने में विफल",
        noData: "कोई डेटा उपलब्ध नहीं",
        loadError: "डेटा लोड करने में विफल",
        categoryAdded: 'श्रेणी "{{category}}" जोड़ी गई!',
        categoryExistsOrEmpty: 'श्रेणी का नाम खाली है या पहले से मौजूद है।',
        productAdded: 'उत्पाद "{{product}}" को "{{category}}" में जोड़ा गया',
        selectCategoryAndProduct: 'एक श्रेणी चुनें और एक उत्पाद नाम दर्ज करें।',
        addCategoryTitle: 'श्रेणी जोड़ें',
        enterCategoryPlaceholder: 'श्रेणी दर्ज करें',
        addCategoryButton: 'श्रेणी जोड़ें',
        addProductTitle: 'उत्पाद जोड़ें',
        searchCategoryPlaceholder: 'श्रेणी खोजें',
        enterProductNamePlaceholder: 'उत्पाद नाम दर्ज करें',
        addProductButton: 'उत्पाद जोड़ें',
        salesReportTitle: 'बिक्री रिपोर्ट',
        fromLabel: 'से:',
        toLabel: 'तक:',
        categoryLabel: 'श्रेणी',
        productLabel: 'उत्पाद',
        quantityLabel: 'मात्रा',
        totalPriceLabel: 'कुल कीमत',
        addPurchasedProductsTitle: 'खरीदे गए उत्पाद जोड़ें',
        searchCategoryLabel: 'श्रेणी खोजें',
        categoryPlaceholder: 'श्रेणी का नाम टाइप करें',
        searchProductLabel: 'उत्पाद खोजें',
        productPlaceholder: 'उत्पाद का नाम टाइप करें',
        quantityPlaceholder: 'मात्रा दर्ज करें',
        updateButton: 'अपडेट करें',
        addButton: 'जोड़ें',
        purchaseListTitle: 'खरीद सूची',
        priceLabel: 'कीमत',
        editButton: 'संपादित करें',
        deleteButton: 'हटाएं',
        submitButton: 'जमा करें',
        missingFields: 'कृपया एक श्रेणी और उत्पाद चुनें।',
        submitError: 'डेटा जमा करने में विफल',
        sellProductsTitle: 'उत्पाद बेचें',
        availableLabel: 'उपलब्ध:',
        sellButton: 'बेचें',
        viewSellHistoryButton: 'बिक्री इतिहास देखें',
        invalidQuantity: 'कृपया एक उत्पाद चुनें और वैध मात्रा दर्ज करें',
        inventoryNotFound: 'इन्वेंट्री डेटा नहीं मिला!',
        insufficientStock: 'पर्याप्त स्टॉक नहीं!',
        productNotFound: 'इन्वेंट्री में उत्पाद नहीं मिला!',
        lowStockAlert: '⚠️ कम स्टॉक चेतावनी! {{product}} अपने मूल मात्रा के 20% से कम है ({{quantity}} किग्रा शेष)।',
        saleRecorded: 'बिक्री सफलतापूर्वक दर्ज की गई!',
        warning: 'चेतावनी',
        sellHistoryTitle: 'बिक्री इतिहास',
        quantitySoldLabel: 'बेची गई मात्रा',
        finalSubmittedListTitle: 'अंतिम जमा की गई सूची',
        totalAmountLabel: 'कुल राशि',
        profitLossTitle: 'लाभ और हानि',
        totalSaleLabel: 'कुल बिक्री',
        totalSalePlaceholder: 'कुल बिक्री दर्ज करें (₹)',
        loadedStockLabel: 'लोड किया गया स्टॉक राशि',
        loadedStockPlaceholder: 'स्टॉक राशि दर्ज करें (₹)',
        remainingStockLabel: 'शेष स्टॉक राशि',
        remainingStockPlaceholder: 'शेष स्टॉक राशि दर्ज करें (₹)',
        totalExpensesLabel: 'कुल व्यय',
        totalExpensesPlaceholder: 'व्यय दर्ज करें (₹)',
        todayProfitLossLabel: "आज का लाभ/हानि",
        calculateProfitLossButton: 'लाभ/हानि की गणना करें',
        currencySymbol: '₹',
        lowStockAlertsTitle: 'कम स्टॉक अलर्ट',
        defaultLowStockMessage: '{{product}} बहुत कम है',
        availableQuantityLabel: 'उपलब्ध मात्रा',
        noAlertsMessage: 'कोई अलर्ट उपलब्ध नहीं',
        viewAllAlertsButton: 'सभी अलर्ट देखें',
        sellerDetailsTitle: 'विक्रेता विवरण',
        sellerIdLabel: 'विक्रेता ID',
        sellerNameLabel: 'विक्रेता का नाम',
        phoneNumberLabel: 'फोन नंबर',
        vehicleIdLabel: 'वाहन ID',
        driverNameLabel: 'ड्राइवर का नाम',
        saveButton: 'सहेजें',
        submittedDetailsTitle: 'जमा किए गए विवरण',
        accountDetailsTitle: 'खाता विवरण',
        homeTab: 'होम',
        inventoryTab: 'इन्वेंट्री',
        sellTab: 'बेचें',
        profitLossTab: 'लाभ/हानि',
        notificationsTab: 'सूचनाएं',
        mainTab: 'मुख्य',
        addCategoriesProducts: 'श्रेणियाँ और उत्पाद जोड़ें',
        addVehicleDetails: 'वाहन विवरण जोड़ें',
        reports: 'रिपोर्ट्स',
        logout: 'लॉग आउट',
        inventoryOverviewTitle: 'इन्वेंट्री अवलोकन',
        pricePerUnitLabel: 'प्रति इकाई कीमत',
        account:'खाता',
        areyousureyouwanttologout:'क्या आप वाकई लॉगआउट करना चाहते हैं?',
        cancel:'रद्द करना'
      },
    },
  },
  lng: "english", // Default language
  fallbackLng: "english",
});

// Create Language Context
export const LanguageContext = createContext();

export const LanguageProvider = ({ children }) => {
  const [language, setLanguage] = useState("english");

  useEffect(() => {
    // Load the saved language from storage
    const loadLanguage = async () => {
      const savedLanguage = await AsyncStorage.getItem("appLanguage");
      if (savedLanguage) {
        setLanguage(savedLanguage);
        i18next.changeLanguage(savedLanguage);
      }
    };
    loadLanguage();
  }, []);

  // Change Language and Save to Storage
  const changeLanguage = async (lang) => {
    setLanguage(lang);
    i18next.changeLanguage(lang);
    await AsyncStorage.setItem("appLanguage", lang);
  };

  return (
    <LanguageContext.Provider value={{ language, changeLanguage }}>
      {children}
    </LanguageContext.Provider>
  );
};